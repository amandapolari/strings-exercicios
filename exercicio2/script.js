const minhaString =
  "Eu nÃ£o sou supersticioso, mas sou um pouco ________.      ";

// ğŸ“Œ a) Removendo EspaÃ§os:
const minhaStringSemEspacos = minhaString.trim();
// console.log(minhaStringSemEspacos)

// ğŸ“Œ b.1 Criando funÃ§Ã£o para fazer impressÃ£o no console:
function imprimirTamanhoDaString(tamanhoInicial, tamanhoFinal) {
  const frase = `
    A quantidade de caracteres ANTES da remoÃ§Ã£o de espaÃ§os Ã© igual a: ${tamanhoInicial}.
    E a quandidade de caracteres DEPOIS da remoÃ§Ã£o de espaÃ§os Ã© igual a: ${tamanhoFinal}.
    `;
    console.log(frase);
}

// ğŸ“Œ b.2 Salvando a quantidade de caracteres de cada string em uma variÃ¡vel:
const quantidadeDeCaracteresAntes = minhaString.length;
const quantidadeDeCaracteresDepois = minhaStringSemEspacos.length;

// ğŸ“Œ b.3 Chamando as funÃ§Ãµes e passando os argumentos verdadeiros:
imprimirTamanhoDaString(quantidadeDeCaracteresAntes, quantidadeDeCaracteresDepois);

// ğŸ“Œ c) Salvando a substituiÃ§Ã£o em uma variÃ¡vel e imprimindo no console:

// USANDO FUNÃ‡ÃƒO:
function retornarSubstiuiÃ§Ã£o(fraseInicial) {
    const fraseFinal = fraseInicial.replace('________','sticioso');
    console.log(`
    A frase apÃ³s a substituiÃ§Ã£o Ã©: ${fraseFinal}
    `);
}
retornarSubstiuiÃ§Ã£o(minhaStringSemEspacos);

// SEM USAR FUNÃ‡ÃƒO:
// const resultadoDaSubstituicao = minhaStringSemEspacos.replace('________','sticioso');
// console.log(`
// A frase apÃ³s a substituiÃ§Ã£o Ã©: ${resultadoDaSubstituicao}
// `)